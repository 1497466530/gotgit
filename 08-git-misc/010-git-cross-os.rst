Git 有着非常庞杂的命令集和功能，到目前为止尚有一些命令及要点还没有介绍。在构思本书的过程中，我尝试用 FreeMind 软件将准备讲述的 Git 的各个命令和要点在各个章节之间拖动，以期在内容上更加充实，组织上更加合理，讲述上更加方便，但最终还是剩下了一些 Git 命令和要点没有被安排在前面的章节中。于是在本书的最后，对这些不是那么重要的 Git 相关内容（缺乏他们会对于一本被冠以“权威指南”的书的完备性有影响），放在称为“Git杂谈”的一遍予以讲述。

首先用一章的内容介绍跨平台项目在使用 Git 时要注意的问题，包括字符集问题、文件名大小写问题、文本文件换行符问题。接下来的一章概要性的介绍本书目前为止尚未涉猎到的 Git 相关命令和话题。

跨平台操作 Git
****************

读者是在什么平台（操作系统）中使用 Git 呢？图40-1是网上一个 Git 调查结果的截图，从中可以看出排在前三位的是：Linux, Mac OS X 和 Windows。而 Windows 用户中又以使用 msysGit 的用户居多。

.. figure:: images/git-misc/git-survs-os.png
   :scale: 80

   图40-1：Git 用户操作系统使用分布图（摘自：http://www.survs.com/results/33Q0OZZE/MV653KSPI2）

在如今手持设备争夺激烈的年代，进行软件开发工作在什么操作系统上已经变得不那么重要了，很多手持设备都提供可以运行在各种主流操作系统的虚拟器，因此一个项目团队的成员根据各自习惯，可能使用不同的操作系统。即一个团队中不同的成员在不同的平台中使用 Git 进行交互，这样的团队在使用 Git 时，可能会遇到平台兼容性问题。

即使团队成员都在同一种操作系统上工作（如 Windows），但是 Git 服务器可能架设在另外的平台上（如 Linux），也同样会遇到平台兼容性问题。

