备忘
=====

blob
---------------


refs
------------------------
引用



staging area : 暂存区
------------------------

字典的解释

<--- 朗道英汉字典5.0 --->
staging area
【医】 遣送区
<--- Dict.cn --->
staging area
部队从一个战场转往另一个战场的集结地


git config
-------------------

$ git config --global core.editor emacs

$ git config --global merge.tool vimdiff

Git 可以理解 kdiff3，tkdiff，meld，xxdiff，emerge，vimdiff，gvimdiff，ecmerge，和 opendiff 等合并工具的输出信息。

repository
--------------

仓库

remote repos: 远程仓库

review
-----------
代码审查


Git 协议
--------
SSH 协议的语法有：

SCP 风格:: URI_SCP = re.compile(r'^([^@:]*@?[^:/]{1,}):')
  : 不能设定端口，除非试用别名

schema 风格 :: URI_ALL = re.compile(r'^([a-z][a-z+]*)://([^@/]*@?[^/]*)/')
  可以设定端口 ssh://user@host:port/
  ssh://, git+ssh:// ssh+git://

what is valid ref name?
-------------------------

git.check_ref_format "heads/xxxxxxxx"



git describe 命令
------------------
显示当前最近的 tag，如果在最近的 tag 基础上有新的提交，则用最近的tag 加上 "-g<commit-id>"



版本
-----
^+rev : 取反？

::

       Thus, the following command:

                   $ git rev-list foo bar ^baz

       means "list all the commits which are reachable from foo or bar, but not from baz".

       A special notation "<commit1>..<commit2>" can be used as a short-hand for "^<commit1> <commit2>". For example,
       either of the following may be used interchangeably:

                   $ git rev-list origin..HEAD
                   $ git rev-list HEAD ^origin


       Another special notation is "<commit1>...<commit2>" which is useful for merges. The resulting set of commits is
       the symmetric difference between the two operands. The following two commands are equivalent:

                   $ git rev-list A B --not $(git merge-base --all A B)
                   $ git rev-list A...B




Git 钩子
--------
* repo/hooks/commit-msg
* repo/hooks/pre-auto-gc



词语翻译
========

ref



参考资料
========




http://www.pcworld.idg.com.au/article/129776/after_controversy_torvalds_begins_work_git_/

* Though BitMover allowed Linux developers to use a free version of its software for kernel development, the company was unhappy with efforts by developer Andrew Tridgell to develop an open source version of the BitKeeper client.

* Linus Torvalds has quipped about the name "git", which is British English slang for a stupid or unpleasant person:[4] "I'm an egotistical [sic] bastard, and I name all my projects after myself. First Linux, now git."[5][6]


http://lwn.net/Articles/131657/

* Git is not a source code management (SCM) system. It is, instead, a set of low-level utilities (Linus compares it to a special-purpose filesystem) which can be used to construct an SCM system. Much of the higher-level work is yet to be done, so the interface that most developers will work with remains unclear. 
* At the lower levels, Git implements two data structures: an object database, and a directory cache. The object database can contain three types of objects: 

