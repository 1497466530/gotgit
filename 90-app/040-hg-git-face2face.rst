Git 和 Hg 面对面
*********************

面对面访谈录
============

**Git：你好 Hg，我发现我们真的很像。**

Hg：是啊，人们把我们都归类为分布式版本控制工具，所以我们之间的相似度，要比和 CVS、SVN 的相似度高的多了。

Hg：我是用 Python 和少部分的 C 语言实现的，你呢？

**Git：我的核心当然使用 C 语言了，因为 Linus Torvalds 最爱用 C 语言了。我的很多命令还使用了 Shell 脚本和 Perl 语言开发，Python 用的很少。**

Hg：大量的使用 C 语言，是你的性能比我高的原因么？

**Git：当然不是了，你不也在核心模块使用 C 语言了么？问题的关键在于我的对象库设计的非常优秀。你不要忘了我是谁发明的，可是大名鼎鼎的 Linux 之父 Linus Tolvars，他对 Linux 文件系统可是再熟悉不过的了，所以他能够以文件系统开发者的视角实现我的核心。**

**Git：还有我在网络传输过程中非常的直观，可以看到实时的进度显示，这也是你所没有的。**

Hg：是啊，非常的惭愧。当克隆一个比较大的 Hg 版本库时，会出现假死状态，用户不知道克隆操作的进展。对了，你为什么能够实现实时的进度显示呢？

**Git：之所以我能够有这样的实现，是因为我使用了“智能协议”。在网络传输的各自一端都启用了相应的辅助程序，实现差异传输及传输进度的计算和显示。**

Hg：我有一个特点是 SVN 用户非常喜欢的，就是我的顺序数字版本号。

**Git：你的顺序数字版本号只是在本地版本库中有效的。也就是说，你不能像 SVN 那样将顺序数字版本号作为项目本身的版本号，因为换做另外的一个版本库克隆，那个数字版本号就会不一样了。**

Hg：我觉得你的暂存区（stage）的概念太古怪了。我提交的时候，改动的文件会直接提交而不需要什么注册到暂存区的操作。

**Git：让读者来作评判吧。如果读者读过本书的第2篇，一定会说 Git 的暂存区帅呆了。**

Hg：我只允许用户对最近的一次提交进行回滚撤销，而你（Git）怎么能允许用户撤销任意多次历史提交呢？那样安全么？

**Git：这就是的我对象库和引用设计的强大之处，我可以使用 git reset 命令将工作分支进行任意的重置，丢弃任意多的历史。至于安全性，我的重置命令有一个保险，就是 reflog ，我随时可以参照 reflog 的记录来弥补错误的重置。**

Hg：我们的 revert 命令好像不同？

**Git：你 Hg 的 hg revert 命令和 SVN 的 svn revert 命令相似，是取消本地修改，用原始拷贝覆盖。你的这个操作在我这里是用 git checkout 命令实现的。我也有一个 git revert 命令，但是这个命令是针对某个历史提交进行反向操作，以取消该历史提交的改动的。**

Hg：我执行日志查看能够看到文本显示的分支图，你呢？

**Git：我需要在日志显示时添加参数，即用命令 git log --graph 。我支持通过建立别名实现简洁的调用，例如建立一个名为 glog 的别名。**

**Git：我听说你 Hg 不支持分支？**

Hg：坦白的说，是的。我虽然也有分支命令，但是分支不是一个独立显示的提交空间，而是各个分支都显示在一起，相当于在版本库中同时拥有多个头，选择哪个分支就相当于把帽子戴在哪个头上面而已。所以我尽量要求我的用户使用克隆来当做分支。

**Git：这也就是为什么使用 Hg 作为项目的版本控制工具，要为每一个分支创建一个单独的版本库的原因吧。实际上我的每一个克隆的版本库也相当于独立的分支，但是因为我有强大的分支功能，因此很多用户还没有意识到。使用 Topgit 的用户就应该使用版本库克隆做为 Topgit 本身的分支管理。**

**Git：还有，因为我对分支的完整支持，使得我可以和 SVN 很好的协同工作。我可以将整个 SVN 转换为本地的 Git 库，但是你 Hg，显然只能每次转换一个分支。**

Hg：是的，我要向你多学习。

命令对照
====================

+---------------+-------------------------------+-------------------------+-------------------------------------+
| 动作          | CVS 命令                      | Git 命令                | 说明                                |
+===============+===============================+=========================+=====================================+
|               |                               |                         |                                     |
+---------------+-------------------------------+-------------------------+-------------------------------------+

