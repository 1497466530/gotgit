"Got Git"


part 1: Meet Git
###################

Chapter 1: Version Control History 
***********************************

1.1       The dark prehistory                     1
=====================================================
          
1.2       CVS -- Leads to SCM explosion           4
======================================================
          
1.3       SVN -- A central SCM superior           6
======================================================
          
1.4       Git -- Linus's second masterpiece       9
======================================================

Chapter 2: Fall in love with Git
***********************************

2.1       Everyday's works backup                 11
=====================================================

2.2       Works with others at diff. location     12
=====================================================

2.3       On Site version control                 13
=====================================================

2.4       No control dir everywhere               15
=====================================================

2.5       Rewrite commit log                      16
=====================================================

2.6       Regrets                                 16
=====================================================

2.7       Better change sets                      17
=====================================================

2.8       Better differences                      18
=====================================================

2.9       Save work progess                       19
=====================================================

2.10      Commit while traveling behind SVN       20
=====================================================

2.11      Pager everywhere                        20
=====================================================

2.12      Fast                                    21
=====================================================


Chapter 3: Install Git
**************************

3.1       Install Git under Linux                 23
=====================================================

3.1.1        Install using pkg mgmt system        23
-----------------------------------------------------

3.1.2        Install from source code.            24
-----------------------------------------------------

3.1.3        Install from Git repository          25
-----------------------------------------------------

3.1.4        Bash completion                      26
-----------------------------------------------------

3.1.5        Chinese character support            26
-----------------------------------------------------


3.2       Install Git under Mac OS X              28
=====================================================

3.2.1        Install from binary package          28
-----------------------------------------------------

3.2.2        Install Xcode.                       29
-----------------------------------------------------

3.2.3        Install using Homebrew               30
-----------------------------------------------------

3.2.4        Install from Git repository          31
-----------------------------------------------------

3.2.5        Bash completion                      32
-----------------------------------------------------

3.2.6        Install other utils                  32
-----------------------------------------------------

3.2.7        Chinese chacter support              33
-----------------------------------------------------


3.3       Install Git under Windows Cygwin        33
=====================================================

3.3.1        Install Cygwin.                      34
-----------------------------------------------------

3.3.2        Install Git                          40
-----------------------------------------------------

3.3.3        Cygwin configuration and usage       42
-----------------------------------------------------

3.3.4        Chinese support for Cygwin Git       44
-----------------------------------------------------

3.3.5        SSH access for Cygwin Git            45
-----------------------------------------------------


3.4       Install Git under Windows msysGit       51
=====================================================

3.4.1        Install msysGit 51
-----------------------------------------------------

3.4.2        msysGit configuration and usage      54
-----------------------------------------------------

3.4.3        Chinese in msysGit shell             55
-----------------------------------------------------

3.4.4        Chinese support for msysGit          57
-----------------------------------------------------

3.4.5        Using SSH protocol                   58
-----------------------------------------------------

3.4.6        TortoiseGit Installation and usage   58
-----------------------------------------------------

3.4.7        Chinese support for TortoiseGit      62
-----------------------------------------------------


Part 2: Git Solo
####################################

Chapter 4: Git Initial
***********************************

4.1       Repository initial and the first commit 63
=====================================================

4.2       Think: why there is a .git directory?   66
=====================================================

4.3       Think: different git config level      69
=====================================================

4.4       Think: who is commiting?               71
=====================================================

4.5       Think: change author name freely, is it safe? 73
============================================================

4.6       Think: what is command alias?           75
=====================================================

4.7       Backup this chapter's work              76
=====================================================

Chapter 5: Git Stage
***********************************

5.1       Why modification not commit directly?   77
=====================================================

5.2       Unstand Git Stage                       83
=====================================================

5.3       Magic in Git Diff                       86
=====================================================

5.4       Do not use git commit -a                90
=====================================================

5.5       I'll be back                            90
=====================================================

Chapter 6: Git Objects
***********************************

6.1       Git object exploration                  92
=====================================================

6.2       Think: What is SHA1, how it generate?   98
=====================================================

6.3       Think：commit ID not a series of num?   100
=====================================================

Chapter 7: Git Reset
***********************************

7.1       Mystery of branch cursor                103
=====================================================

7.2       Save bad reset using reflog             105
=====================================================

7.3       Deep into git reset                     107
=====================================================

Chapter 8: Git Checkout
***********************************

8.1       Checkout is HEAD reset                  110
=====================================================

8.2       Detached HEAD                           113
=====================================================

8.3       Deep into git checkout                  114
=====================================================

Chapter 9: Restore Work Progress
***********************************

9.1       Be back                                 117
=====================================================

9.2       Using git stash                         120
=====================================================

9.3       Mystery in git stash                    121
=====================================================

Chapter 10: Git Basic Operation
***********************************

10.1      Take a photo first                      128
=====================================================

10.2      Delete files                            128
=====================================================

10.2.1      Local delete is not real delete       129
-----------------------------------------------------

10.2.2      Delete using git rm                   130
-----------------------------------------------------

10.2.3      Mark delete using git add -u          131
-----------------------------------------------------

10.3      Deleted file rollback                   132
=====================================================

10.4      Move files                              133
=====================================================

10.5      A Hello World with version              135
=====================================================

10.6      Add interactive: git add -i             137
=====================================================

10.7      Hello world new problem                 140
=====================================================

10.8      File ignore                             141
=====================================================


Chapter 11: Travel in Git History
***********************************

11.1      gitk                                   146
=====================================================

11.2      gitg                                    147
=====================================================

11.3      qgit                                    153
=====================================================

11.4      Command line tools                      158
=====================================================

11.4.1      Revision presentation：git rev-parse  160
-----------------------------------------------------

11.4.2      Revision list：git rev-list           163
-----------------------------------------------------

11.4.3      Log browse：git log                   166
-----------------------------------------------------

11.4.4      Show difference：git diff             170
-----------------------------------------------------

11.4.5      git blame                             171
-----------------------------------------------------

11.4.6      git bisect                            172
-----------------------------------------------------

11.4.7      Get revison copy                      177
-----------------------------------------------------


Chapter 12: Change History
***********************************

12.1      One Step Regret                         178
=====================================================

12.2      Multiple steps regret                   181
=====================================================

12.3      Back to future                          182
=====================================================

12.3.1      Time machine v1                       184
-----------------------------------------------------

12.3.2      Time machine v1                       189
-----------------------------------------------------

12.3.3      Time machine v1                       194
-----------------------------------------------------

12.4      Throw away history                      198
=====================================================

12.5      Revert commit                           200
=====================================================

Chapter 13: Git Clone
***********************************

13.1      Eggs in different baskets               203
=====================================================

13.2      Neighborhood workspace                  204
=====================================================

13.3      Bare repository from clone              208
=====================================================

13.4      Bare repository from initial            209
=====================================================

Chapter 14: You are Git Admin
***********************************

14.1      Where is objects and refs?              213
=====================================================

14.2      Temporary objects of stage operations   215
=====================================================

14.3      Trash objects from reset operation      217
=====================================================

14.4      Git housekeeper: git-gc                 219
=====================================================

14.5      Git housekeeper automatically           223
=====================================================


Part 3: Git harmoney
####################################

Chapter 15: Git protocol and cooperation
**********************************************

15.1      Git Protocol                            225
=====================================================

15.2      Cooperation simulat. with file protocol 227
=====================================================

15.3      Force non-fast-forward push             229
=====================================================

15.4      Merge then push                         233
=====================================================

15.5      Disallow non-fast-forward push          234
=====================================================

Chapter 16: Resolve conflict
***********************************

16.1      Merge during git pull                   236
=====================================================

16.2      Merge lesson 1：merge automatically     238
=====================================================

16.2.1      修改不同的文件… 238
-----------------------------------------------------

16.2.2      修改相同文件的不同区域… 241
-----------------------------------------------------

16.2.3      同时更改文件名和文件内容… 242
-----------------------------------------------------

16.3      Merge lesson 2: logical conflict        244
=====================================================

16.4      Merge lesson 3: resolve conflict        245
=====================================================

16.4.1      Merge by hands                        248
-----------------------------------------------------

16.4.2      Resolve using GUI tools               249
-----------------------------------------------------

16.5      Merge lesson 4: tree conflict           254
=====================================================

16.5.1      Resolve tree conflict by hands        256
-----------------------------------------------------

16.5.2      Resolve tree conflict interactively   257
-----------------------------------------------------

16.6      Merge Strategy                          259
=====================================================

16.7      Merge related configuration             260
=====================================================

Chapter 17: Git Milestone
***********************************

17.1      Show milestone                          264
=====================================================

17.2      Create milestone                        266
=====================================================

17.2.1      Lightweight tag                       267
-----------------------------------------------------

17.2.2      Tag with notes                        268
-----------------------------------------------------

17.2.3      Tag with signature                    270
-----------------------------------------------------

17.3      Delete milestone                        273
=====================================================

17.4      Not change tag freely                   274
=====================================================

17.5      Share milestone                         274
=====================================================

17.6      Delete remote milestone                 278
=====================================================

17.7      Milestone naming rules                  278
=====================================================

Chapter 18: Git Branch
***********************************

18.1      Headache of branch management           285
=====================================================

18.1.1      Release branch                        286
-----------------------------------------------------

18.1.2      Feature branch                        288
-----------------------------------------------------

18.1.3      Vendor branch                         290
-----------------------------------------------------

18.2      Overview of git branch command          291
=====================================================

18.3      Hello World Project                     291
=====================================================

18.4      Develop based on feature branch         293
=====================================================

18.4.1      Create branch: user1/getopt           293
-----------------------------------------------------

18.4.2      Create branch: user2/i18n             295
-----------------------------------------------------

18.4.3      Developer user1 complete              296
-----------------------------------------------------

18.4.4      Merge user1/getopt to master          298
-----------------------------------------------------

18.5      Develop based on release branch         299
=====================================================

18.5.1      Create release branch                 299
-----------------------------------------------------

18.5.2      Developer user1 works in release br.  301
-----------------------------------------------------

18.5.3      Developer user2 works in release br.  302
-----------------------------------------------------

18.5.4      Developer user2 merge and push        303
-----------------------------------------------------

18.5.5      Release branch fixes to master        305
-----------------------------------------------------

18.6      Rebase                                  309
=====================================================

18.6.1      Feature branch user2/i18n complete    309
-----------------------------------------------------

18.6.2      Branch user2/i18n rebase              311
-----------------------------------------------------

Chapter 19: Remote repository
***********************************

19.1      Remote branch                           320
=====================================================

19.2      Branch tracking                         323
=====================================================

19.3      Remote repository                       326
=====================================================

19.4      PUSH, PULL with remote repository       329
=====================================================

19.5      Tag and remote repository               331
=====================================================

19.6      Branch and tag security                 331
=====================================================

Chapter 20: Works with patches
***********************************

20.1      Create patches                          333
=====================================================

20.2      Apply patches                           335
=====================================================

20.3      StGit and Quilt                         337
=====================================================

20.3.1      StGit                                 337
-----------------------------------------------------

20.3.2      Quilt                                 341
-----------------------------------------------------


Part 4: Git model
####################################

Chapter 21: Classic Git Model
***********************************

21.1      Central Cooperation Model               343
=====================================================

21.1.1      Work with central model               345
-----------------------------------------------------

21.1.2      Special cental model: Gerrit          346
-----------------------------------------------------

21.2      Pyramid Cooperation Model               347
=====================================================

21.2.1      Contributer open readonly repository  348
-----------------------------------------------------

21.2.2      Contribute using patches              349
-----------------------------------------------------

Chapter 22: Topgit Model
***********************************

22.1      Three SCM Milestone of Myself           351
=====================================================

22.2      Mystery of Topgit                       353
=====================================================

22.3      Topgit Installation                     354
=====================================================

22.4      Topgit Usage                            355
=====================================================

22.5      Hack Topgit in Topgit way               367
=====================================================

22.6      Notes of Topgit                         372
=====================================================

Chapter 23: Submodule Model
***********************************

23.1      Create Submodule
=====================================================

23.2      Clone repository with submodule         377
=====================================================

23.3      Work inside submodule and update        378
=====================================================

23.4      Hidden submodule                        381
=====================================================

23.5      Submodule management                    384
=====================================================

Chapter 24: Subtree merge
***********************************

24.1      Import external repository              386
=====================================================

24.2      Subtree merge                           388
=====================================================

24.3      Track upstream with subtree merge       391
=====================================================

24.4      Subtree split                           392
=====================================================

24.5      git-subtree Plugin                      392
=====================================================

Chapter 25: Android Multiple repositories Cooperation
******************************************************

25.1      About repo                              396
=====================================================

25.2      Install repo                            397
=====================================================

25.3      repo and manifest initial               398
=====================================================

25.4      Manifest repository and manifest file   400
=====================================================

25.5      Sync projects                           401
=====================================================

25.6      Setup Android repositories mirror       402
=====================================================

25.7      Repo commands                           405
=====================================================

25.8      Repo Workflow                           412
=====================================================

25.9      Use repo in your project                412
=====================================================

25.9.1      Model 1: Repo with Gerrit             412
-----------------------------------------------------

25.9.2      Model 2: Repo without Gerrit          413
-----------------------------------------------------

25.9.3      Model 3: Improved Repo without Gerrit 414
-----------------------------------------------------


Chapter 26: Git-SVN Model
***********************************

26.1      git-svn workflow                        423
=====================================================

26.2      Mystery of git-svn                      430
=====================================================

26.2.1      Git 库配置文件的扩展及分支映射… 430
-----------------------------------------------------

26.2.2      Git 工作分支和 Subversion 如何对应？… 432
-----------------------------------------------------

26.2.3      其他辅助文件… 434
-----------------------------------------------------

26.3      多样的 git-svn 克隆模式… 434
=====================================================

26.4      共享 git-svn 的克隆库… 437
=====================================================

26.5      git-svn 的局限… 439
=====================================================


Part 5: Git Server
####################################

Chapter 27: Using HTTP Protocol
***********************************

27.1      哑传输协议… 440
=====================================================

27.2      智能 HTTP 协议… 443
=====================================================

27.3      Gitweb 服务器… 445
=====================================================

27.3.1      Gitweb 安装… 445
-----------------------------------------------------

27.3.2      Gitweb 配置… 446
-----------------------------------------------------

27.3.3      版本库的 Gitweb 相关设置… 447
-----------------------------------------------------


Chapter 28: Using Git Protocol
***********************************

28.1      Git 协议语法格式… 449
=====================================================

28.2      Git 服务软件… 449
=====================================================

28.3      以 inetd 方式配置运行… 449
=====================================================

28.4      以 runit 方式配置运行… 450
=====================================================

Chapter 29: Using SSH Protocol
***********************************

29.1      SSH 协议语法格式… 452
=====================================================

29.2      服务架设方式比较… 452
=====================================================

29.3      关于 SSH 公钥认证… 454
=====================================================

29.4      关于 SSH 主机别名… 455
=====================================================

Chapter 30: Gitolite
***********************************

30.1      安装 Gitolite. 458
=====================================================

30.1.1      服务器端创建专用帐号… 458
-----------------------------------------------------

30.1.2      Gitolite 的安装/升级… 459
-----------------------------------------------------

30.1.3      关于 SSH 主机别名… 462
-----------------------------------------------------

30.1.4      其他的安装方法… 463
-----------------------------------------------------

30.2      管理 Gitolite. 464
=====================================================

30.2.1      管理员克隆 gitolite-admin 管理库… 464
-----------------------------------------------------

30.2.2      增加新用户… 465
-----------------------------------------------------

30.2.3      更改授权… 467
-----------------------------------------------------

30.3      Gitolite 授权详解… 468
=====================================================

30.3.1      授权文件的基本语法… 468
-----------------------------------------------------

30.3.2      定义用户组和版本库组… 469
-----------------------------------------------------

30.3.3      版本库ACL. 470
-----------------------------------------------------

30.3.4      Gitolite 授权机制… 472
-----------------------------------------------------

30.4      版本库授权案例… 473
=====================================================

30.4.1      对整个版本库进行授权… 473
-----------------------------------------------------

30.4.2      通配符版本库的授权… 474
-----------------------------------------------------

30.4.3      用户自己的版本库空间… 475
-----------------------------------------------------

30.4.4      对引用的授权：传统模式… 476
-----------------------------------------------------

30.4.5      对引用的授权：扩展模式… 477
-----------------------------------------------------

30.4.6      对引用的授权：禁用规则的使用… 478
-----------------------------------------------------

30.4.7      用户分支… 478
-----------------------------------------------------

30.4.8      对路径的写授权… 479
-----------------------------------------------------

30.5      创建新版本库… 479
=====================================================

30.5.1      在配置文件中出现的版本库，即时生成… 480
-----------------------------------------------------

30.5.2      通配符版本库，管理员通过推送创建… 481
-----------------------------------------------------

30.5.3      直接在服务器端创建… 482
-----------------------------------------------------

30.6      对 Gitolite 的改进… 483
=====================================================

30.7      Gitolite 功能拓展… 483
=====================================================

30.7.1      版本库镜像… 483
-----------------------------------------------------

30.7.2      Gitweb 和 Git daemon 支持… 486
-----------------------------------------------------

30.7.3      其他功能拓展和参考… 487
-----------------------------------------------------

Chapter 31: Gitosis
***********************************

31.1      安装 Gitosis. 490
=====================================================

31.1.1      Gitosis 的安装… 490
-----------------------------------------------------

31.1.2      服务器端创建专用帐号… 491
-----------------------------------------------------

31.1.3      Gitosis 服务初始化… 491
-----------------------------------------------------

31.2      管理 Gitosis. 492
=====================================================

31.2.1      管理员克隆 gitolit-admin 管理库… 492
-----------------------------------------------------

31.2.2      增加新用户… 493
-----------------------------------------------------

31.2.3      更改授权… 494
-----------------------------------------------------

31.3      Gitosis 授权详解… 495
=====================================================

31.3.1      Gitosis 默认设置… 495
-----------------------------------------------------

31.3.2      管理版本库 gitosis-admin. 496
-----------------------------------------------------

31.3.3      定义用户组和授权… 496
-----------------------------------------------------

31.3.4      Gitweb 整合… 498
-----------------------------------------------------

31.4      创建新版本库… 498
=====================================================

31.5      轻量级管理的 Git 服务… 499
=====================================================

Chapter 32: Gerrit
***********************************

32.1      Gerrit 的实现原理… 502
=====================================================

32.2      架设 Gerrit 的服务器… 506
=====================================================

32.3      Gerrit 的配置文件… 512
=====================================================

32.4      Gerrit 的数据库访问… 513
=====================================================

32.5      立即注册为 Gerrit 管理员… 515
=====================================================

32.6      管理员访问 SSH 的管理接口… 518
=====================================================

32.7      创建新项目… 520
=====================================================

32.8      从已有的 Git 库创建项目… 524
=====================================================

32.9      定义评审工作流… 526
=====================================================

32.10        Gerrit 评审工作流实战… 529
=====================================================

32.10.1    开发者在本地版本库中工作… 530
-----------------------------------------------------

32.10.2    开发者向审核服务器提交… 531
-----------------------------------------------------

32.10.3    审核评审任务… 531
-----------------------------------------------------

32.10.4    评审任务没有通过测试… 534
-----------------------------------------------------

32.10.5    重新提交新的补丁集… 536
-----------------------------------------------------

32.10.6    新修订集通过评审… 537
-----------------------------------------------------

32.10.7    从远程版本库更新… 539
-----------------------------------------------------

32.11        更多 Gerrit 参考… 540
=====================================================

Chapter 33: Git Hosting
***********************************

33.1      Github. 541
=====================================================

33.2      Gitorious. 543
=====================================================


Part 6: Migrate to Git
####################################

Chapter 34: CVS to Git
***********************************

34.1      安装 cvs2svn（含 cvs2git）… 546
=====================================================

34.1.1      Linux下cvs2svn的安装… 546
-----------------------------------------------------

34.1.2      Mac OS X 下 cvs2svn 的安装… 547
-----------------------------------------------------

34.2      版本库转换的准备工作… 547
=====================================================

34.2.1      版本库转换注意事项… 547
-----------------------------------------------------

34.2.2      文件名乱码问题… 548
-----------------------------------------------------

34.2.3      提交说明乱码问题… 548
-----------------------------------------------------

34.3      版本库转换… 550
=====================================================

34.3.1      配置文件解说… 550
-----------------------------------------------------

34.3.2      运行cvs2git完成转换… 554
-----------------------------------------------------

34.4      迁移后的版本库检查… 555
=====================================================

Chapter 35: Others SCM Migration
***********************************

35.1      SVN to Git                              557
=====================================================

35.2      Hg 版本库到Git的迁移… 558
=====================================================

35.3      通用版本库迁移… 561
=====================================================

35.4      Git 版本库整理… 567
=====================================================

35.4.1      环境变量过滤器… 569
-----------------------------------------------------

35.4.2      树过滤器… 570
-----------------------------------------------------

35.4.3      暂存区过滤器… 570
-----------------------------------------------------

35.4.4      父节点过滤器… 570
-----------------------------------------------------

35.4.5      提交说明过滤器… 571
-----------------------------------------------------

35.4.6      提交过滤器… 571
-----------------------------------------------------

35.4.7      里程碑名字过滤器… 573
-----------------------------------------------------

35.4.8      子目录过滤器… 573
-----------------------------------------------------


Part 7: Git Other Usage
####################################

Chapter 36: etckeeper
***********************************

36.1      安装 etckeeper. 575
=====================================================

36.2      配置 etckeeper. 575
=====================================================

36.3      使用 etckeeper. 576
=====================================================

Chapter 37: Gistore
***********************************

37.1      Gistore 的安装… 577
=====================================================

37.1.1      从源码安装 Gistore. 577
-----------------------------------------------------

37.1.2      用 easy_install 安装… 578
-----------------------------------------------------

37.2      Gistore 的使用… 579
=====================================================

37.2.1      创建并初始化备份库… 580
-----------------------------------------------------

37.2.2      Gistore 的配置文件… 580
-----------------------------------------------------

37.2.3      Gistore 的备份项管理… 582
-----------------------------------------------------

37.2.4      执行备份任务… 583
-----------------------------------------------------

37.2.5      查看备份日志及数据… 583
-----------------------------------------------------

37.2.6      查看及恢复备份数据… 585
-----------------------------------------------------

37.2.7      备份回滚及设置… 586
-----------------------------------------------------

37.2.8      注册备份任务别名… 588
-----------------------------------------------------

37.2.9      自动备份：crontab. 588
-----------------------------------------------------

37.3      Gistore 双机备份… 589
=====================================================

Chapter 38: 补丁中的二进制文件
***********************************

38.1      Git 版本库中二进制文件变更的支持… 590
=====================================================

38.2      对非 Git 版本库中二进制文件变更的支持… 594
=====================================================

38.3      其他工具对 Git 扩展补丁文件的支持… 596
=====================================================

Chapter 39: 云存储
***********************************

39.1      现有云存储的问题… 598
=====================================================

39.2      Git 式云存储畅想… 599
=====================================================


Part 8: MISC
####################################

Chapter 40: 跨平台操作 Git
***********************************

40.1      字符集问题… 602
=====================================================

40.2      文件名大小写问题… 603
=====================================================

40.3      换行符问题… 604
=====================================================

Chapter 41: Git 的其他特性…. 609
***********************************

41.1      属性… 609
=====================================================

41.1.1      属性定义… 609
-----------------------------------------------------

41.1.2      属性文件及优先级… 610
-----------------------------------------------------

41.1.3      常用属性介绍… 612
-----------------------------------------------------

41.2      钩子和模板… 619
=====================================================

41.2.1      Git 钩子… 619
-----------------------------------------------------

41.2.2      Git 模板… 625
-----------------------------------------------------

41.3      稀疏检出和浅克隆… 626
=====================================================

41.3.1      稀疏检出… 626
-----------------------------------------------------

41.3.2      浅克隆… 629
-----------------------------------------------------

41.4      嫁接和替换… 631
=====================================================

41.4.1      提交嫁接… 631
-----------------------------------------------------

41.4.2      提交替换… 632
-----------------------------------------------------

41.5      Git 评注… 633
=====================================================

41.5.1      评注的奥秘… 634
-----------------------------------------------------

41.5.2      评注相关命令… 637
-----------------------------------------------------

41.5.3      评注相关配置… 638
-----------------------------------------------------


Part 9: Appendix
####################################

Git Commands Index
************************

Git and CVS, face to face
******************************

Git and SVN, face to face
******************************

Git and Hg, face to face
******************************
