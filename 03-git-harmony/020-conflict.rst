冲突解决
********

上一章介绍了 Git 协议，并且使用本地协议来模拟一个远程的版本库，两个不同的用户检出该版本库，和该远程版本库进行交互，交换数据、协同工作。在上一章的协同中只遇到了一个小小的麻烦 —— 非快进式推送，可以通过先执行 PULL（拉回）操作，在成功完成合并后再推送。

冲突的类型

    未引发冲突
    冲突的自动解决（成功）
    冲突的自动解决（逻辑冲突）
    真正的冲突（手动解决）
    因为文件重命名引发的冲突。到底改名不改名？（SVN 中叫做树冲突）

冲突解决（手动）

冲突解决（mergetool）

    kdiff3

merge 操作的策略

    ours
    theirs
    recursive
    ocutpus

